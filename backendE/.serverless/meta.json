{
  "C:\\Users\\fildi hellen\\Desktop\\Express\\backendE": {
    "versionSfCore": null,
    "versionFramework": "4.4.11",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>",
      "sls": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "service": "backend-e",
            "provider": {
              "name": "aws",
              "runtime": "nodejs20.x",
              "region": "af-south-1",
              "environment": {
                "DB_HOST": "expressuddb.cdswaw8i23c6.af-south-1.rds.amazonaws.com",
                "DB_DATABASE": "expressuddb",
                "DB_USERNAME": "admin",
                "DB_PASSWORD": "<REDACTED>"
              },
              "iamRoleStatements": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssm:GetParameter",
                    "ssm:GetParameters",
                    "ssm:GetParametersByPath"
                  ],
                  "Resource": "arn:aws:ssm:af-south-1:218381085969:parameter/express/db/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "rds:DescribeDBInstances",
                    "rds:DescribeDBClusters",
                    "rds:ModifyDBInstance",
                    "rds:ModifyDBCluster",
                    "rds:Connect"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "codepipeline:PutJobSuccessResult",
                    "codepipeline:PutJobFailureResult"
                  ],
                  "Resource": "*"
                }
              ],
              "stage": "dev",
              "versionFunctions": true
            },
            "functions": {
              "migrate": {
                "handler": "artisan",
                "description": "Run Laravel migrations",
                "layers": [
                  "arn:aws:lambda:af-south-1:209497400698:layer:php-81-fpm:20"
                ],
                "timeout": 120,
                "memorySize": 512,
                "environment": {
                  "ARTISAN_COMMAND": "migrate --force"
                },
                "events": [
                  {
                    "schedule": {
                      "rate": [
                        "rate(1 day)"
                      ]
                    }
                  }
                ],
                "name": "backend-e-dev-migrate"
              }
            },
            "resources": {
              "Resources": {
                "LambdaExecutionRole": {
                  "Type": "AWS::IAM::Role",
                  "Properties": {
                    "RoleName": "LambdaDBHandlerRole",
                    "AssumeRolePolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Principal": {
                            "Service": [
                              "lambda.amazonaws.com"
                            ]
                          },
                          "Action": "sts:AssumeRole"
                        }
                      ]
                    },
                    "Policies": [
                      {
                        "PolicyName": "AccessRDSandSSM",
                        "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                            {
                              "Effect": "Allow",
                              "Action": [
                                "ssm:GetParameter",
                                "ssm:GetParameters",
                                "ssm:GetParametersByPath",
                                "rds:DescribeDBInstances",
                                "rds:DescribeDBClusters",
                                "rds:ModifyDBInstance",
                                "rds:ModifyDBCluster",
                                "rds:Connect"
                              ],
                              "Resource": "*"
                            },
                            {
                              "Effect": "Allow",
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Resource": "arn:aws:logs:*:*:*"
                            },
                            {
                              "Effect": "Allow",
                              "Action": [
                                "codepipeline:PutJobSuccessResult",
                                "codepipeline:PutJobFailureResult"
                              ],
                              "Resource": "*"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "configFileDirPath": "C:\\Users\\fildi hellen\\Desktop\\Express\\backendE",
          "config": {
            "type": "sls"
          },
          "options": {},
          "stage": "dev",
          "dashboard": null,
          "logger": {
            "namespace": "s:core:resolver:sls",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      }
    },
    "composeServiceName": null,
    "servicePath": "C:\\Users\\fildi hellen\\Desktop\\Express\\backendE",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "backend-e",
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "region": "af-south-1",
        "environment": {
          "DB_HOST": "expressuddb.cdswaw8i23c6.af-south-1.rds.amazonaws.com",
          "DB_DATABASE": "expressuddb",
          "DB_USERNAME": "admin",
          "DB_PASSWORD": "<REDACTED>"
        },
        "iamRoleStatements": [
          {
            "Effect": "Allow",
            "Action": [
              "ssm:GetParameter",
              "ssm:GetParameters",
              "ssm:GetParametersByPath"
            ],
            "Resource": "arn:aws:ssm:af-south-1:218381085969:parameter/express/db/*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "rds:DescribeDBInstances",
              "rds:DescribeDBClusters",
              "rds:ModifyDBInstance",
              "rds:ModifyDBCluster",
              "rds:Connect"
            ],
            "Resource": "*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "logs:CreateLogGroup",
              "logs:CreateLogStream",
              "logs:PutLogEvents"
            ],
            "Resource": "arn:aws:logs:*:*:*"
          },
          {
            "Effect": "Allow",
            "Action": [
              "codepipeline:PutJobSuccessResult",
              "codepipeline:PutJobFailureResult"
            ],
            "Resource": "*"
          }
        ],
        "stage": "dev",
        "versionFunctions": true
      },
      "functions": {
        "migrate": {
          "handler": "artisan",
          "description": "Run Laravel migrations",
          "layers": [
            "arn:aws:lambda:af-south-1:209497400698:layer:php-81-fpm:20"
          ],
          "timeout": 120,
          "memorySize": 512,
          "environment": {
            "ARTISAN_COMMAND": "migrate --force"
          },
          "events": [
            {
              "schedule": {
                "rate": [
                  "rate(1 day)"
                ]
              }
            }
          ],
          "name": "backend-e-dev-migrate"
        }
      },
      "resources": {
        "Resources": {
          "LambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "LambdaDBHandlerRole",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "AccessRDSandSSM",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameter",
                          "ssm:GetParameters",
                          "ssm:GetParametersByPath",
                          "rds:DescribeDBInstances",
                          "rds:DescribeDBClusters",
                          "rds:ModifyDBInstance",
                          "rds:ModifyDBCluster",
                          "rds:Connect"
                        ],
                        "Resource": "*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "codepipeline:PutJobSuccessResult",
                          "codepipeline:PutJobFailureResult"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        }
      }
    },
    "serviceRawFile": "service: backend-e\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs20.x # Using the latest Node.js runtime\r\n  region: af-south-1\r\n  environment:\r\n    DB_HOST: ${ssm:/express/db/host}\r\n    DB_DATABASE: ${ssm:/express/db/name}\r\n    DB_USERNAME: ${ssm:/express/db/username}\r\n    DB_PASSWORD: ${ssm:/express/db/password}\r\n  iamRoleStatements:\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"ssm:GetParameter\"\r\n        - \"ssm:GetParameters\"\r\n        - \"ssm:GetParametersByPath\"\r\n      Resource:\r\n        - \"arn:aws:ssm:af-south-1:218381085969:parameter/express/db/*\"\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"rds:DescribeDBInstances\"\r\n        - \"rds:DescribeDBClusters\"\r\n        - \"rds:ModifyDBInstance\"\r\n        - \"rds:ModifyDBCluster\"\r\n        - \"rds:Connect\"\r\n      Resource: \"*\"\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"logs:CreateLogGroup\"\r\n        - \"logs:CreateLogStream\"\r\n        - \"logs:PutLogEvents\"\r\n      Resource: \"arn:aws:logs:*:*:*\"\r\n    - Effect: \"Allow\"\r\n      Action:\r\n        - \"codepipeline:PutJobSuccessResult\"\r\n        - \"codepipeline:PutJobFailureResult\"\r\n      Resource: \"*\"\r\n\r\nfunctions:\r\n  migrate:\r\n    handler: artisan # Using Bref's artisan handler\r\n    description: \"Run Laravel migrations\"\r\n    layers:\r\n      - arn:aws:lambda:af-south-1:209497400698:layer:php-81-fpm:20 # Use appropriate PHP layer\r\n    timeout: 120\r\n    memorySize: 512\r\n    environment:\r\n      ARTISAN_COMMAND: \"migrate --force\"\r\n    events:\r\n      - schedule:\r\n          rate: rate(1 day) # Scheduled execution once daily\r\n\r\nresources:\r\n  Resources:\r\n    LambdaExecutionRole:\r\n      Type: \"AWS::IAM::Role\"\r\n      Properties:\r\n        RoleName: \"LambdaDBHandlerRole\"\r\n        AssumeRolePolicyDocument:\r\n          Version: \"2012-10-17\"\r\n          Statement:\r\n            - Effect: \"Allow\"\r\n              Principal:\r\n                Service:\r\n                  - \"lambda.amazonaws.com\"\r\n              Action: \"sts:AssumeRole\"\r\n        Policies:\r\n          - PolicyName: \"AccessRDSandSSM\"\r\n            PolicyDocument:\r\n              Version: \"2012-10-17\"\r\n              Statement:\r\n                - Effect: \"Allow\"\r\n                  Action:\r\n                    - \"ssm:GetParameter\"\r\n                    - \"ssm:GetParameters\"\r\n                    - \"ssm:GetParametersByPath\"\r\n                    - \"rds:DescribeDBInstances\"\r\n                    - \"rds:DescribeDBClusters\"\r\n                    - \"rds:ModifyDBInstance\"\r\n                    - \"rds:ModifyDBCluster\"\r\n                    - \"rds:Connect\"\r\n                  Resource: \"*\"\r\n                - Effect: \"Allow\"\r\n                  Action:\r\n                    - \"logs:CreateLogGroup\"\r\n                    - \"logs:CreateLogStream\"\r\n                    - \"logs:PutLogEvents\"\r\n                  Resource: \"arn:aws:logs:*:*:*\"\r\n                - Effect: \"Allow\"\r\n                  Action:\r\n                    - \"codepipeline:PutJobSuccessResult\"\r\n                    - \"codepipeline:PutJobFailureResult\"\r\n                  Resource: \"*\"\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "Access denied when accessing /serverless-framework/state/s3-bucket SSM parameter and serverless-framework-state-0713a478-dbb4-4bc8-aeb7-d816884fba07 S3 bucket. Please check your permissions and try again. You have the following options:\n• Ensure you have permission to create SSM and S3 resources.\n• Use the \"state\" field to specify an existing S3 bucket.\n• Manually create the S3 bucket and SSM parameter.\n\nFor more details, please refer to the documentation: https://slss.io/compose-state\n\nOriginal error: User: arn:aws:iam::218381085969:user/Expressud-user is not authorized to perform: s3:CreateBucket on resource: \"arn:aws:s3:::serverless-framework-state-8a773078-042f-48c0-923a-395bccb1264d\" because no identity-based policy allows the s3:CreateBucket action",
      "code": "COMPOSE_STATE_INSUFFICIENT_PERMISSIONS"
    },
    "params": {},
    "machineId": "6493e01a4e158e326b5d9635efb6a8ed",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "8eb4fa3b-b453-49a8-bce1-21ac8ffafc70",
    "orgName": "expressud",
    "userId": "hR0grWJswnMSDy3ZsS",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "expressud",
    "subscription": null,
    "userEmail": "intysilva1@gmail.com",
    "serviceProviderAwsRegion": "af-south-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "218381085969",
    "projectType": "traditional",
    "versionSf": "4.4.11",
    "serviceProviderAwsCfStackName": "backend-e-dev",
    "serviceUniqueId": null,
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}