version: 0.2

env:
  variables:
    PANEL_DIR: "admin-panel"
    DIST_DIR: "admin-panel/dist/admin-panel"
    # REQUIRED: your S3 bucket that hosts the admin panel
    BUCKET: "expressud-admin"
    # OPTIONAL: set this in CodeBuild env vars to enable invalidation
    # CLOUDFRONT_DISTRIBUTION_ID: "E123ABC456DEF"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "‚ñ∂ Installing Angular CLI & deps"
      - npm i -g @angular/cli
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"
      - npm ci --legacy-peer-deps

  pre_build:
    commands:
      - echo "üîé Checking SOURCE for forbidden localhost URLs (excluding environments + interceptor)..."
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"

      # Allow localhost ONLY inside environments files and the interceptor (which rewrites bad URLs).
      # Fail if localhost appears anywhere else in source.
      - |
        if grep -R -n -E "localhost:8000|127\.0\.0\.1:8000" src/ \
          --exclude="environment.ts" \
          --exclude="environment.development.ts" \
          --exclude="environment.prod.ts" \
          --exclude="api-base.interceptor.ts" \
          --exclude-dir="node_modules" \
          --exclude-dir="dist" ; then
          echo "‚ùå Found localhost in SOURCE outside allowed files. Fix before building."
          exit 1
        else
          echo "‚úÖ SOURCE clean (no localhost outside allowed files)."
        fi

      - echo "üîé Ensuring you DON'T import environments/environment.prod directly..."
      - |
        if grep -R -n "environments/environment\.prod" src/ ; then
          echo "‚ùå Don't import environment.prod directly. Import 'environments/environment' instead."
          exit 1
        else
          echo "‚úÖ No direct environment.prod imports."
        fi

  build:
    commands:
      - echo "üèó Building PRODUCTION bundle..."
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"
      - ng build --configuration production --output-path=dist/admin-panel

  post_build:
    commands:
      - echo "üîé Verifying BUILT assets have no localhost..."
      - cd "$CODEBUILD_SRC_DIR/$DIST_DIR"
      - |
        if grep -R -n -E "localhost:8000|127\.0\.0\.1:8000" . --include="*.js" --include="*.html" ; then
          echo "‚ùå Built bundle contains localhost. Check env swapping and source."
          exit 1
        else
          echo "‚úÖ Built bundle clean (no localhost)."
        fi

      - echo "‚òÅÔ∏è Uploading static assets to S3 (long cache, immutable)..."
      - aws s3 sync "$CODEBUILD_SRC_DIR/$DIST_DIR" "s3://$BUCKET" --delete \
          --cache-control "public, max-age=31536000, immutable" \
          --exclude "index.html"

      - echo "üìÑ Uploading index.html to S3 (no-cache to avoid stale SPA shell)..."
      - aws s3 cp "$CODEBUILD_SRC_DIR/$DIST_DIR/index.html" "s3://$BUCKET/index.html" \
          --cache-control "no-cache, no-store, must-revalidate" \
          --content-type "text/html; charset=utf-8"

      - |
        if [ -n "$CLOUDFRONT_DISTRIBUTION_ID" ]; then
          echo "üöÄ Invalidating CloudFront /* ..."
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_DISTRIBUTION_ID" \
            --paths "/*"
        else
          echo "‚ÑπÔ∏è CLOUDFRONT_DISTRIBUTION_ID not set; skipping invalidation."
        fi

      - echo "‚úÖ Build completed on $(date)"

artifacts:
  files:
    - '**/*'
  base-directory: 'admin-panel/dist/admin-panel'
