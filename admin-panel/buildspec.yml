version: 0.2

env:
  variables:
    PANEL_DIR: "admin-panel"
    DIST_DIR: "admin-panel/dist/admin-panel"
    S3_BUCKET: "expressud-admin"
    # Prefer setting this in the CodeBuild project env vars instead of hardcoding:
    CF_DISTRIBUTION_ID: "YOUR_CLOUDFRONT_DIST_ID"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo "‚ñ∂ Installing Angular CLI & deps"
      - npm i -g @angular/cli
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"
      - npm ci --legacy-peer-deps

  pre_build:
    commands:
      - echo "üîé Checking SOURCE for forbidden localhost URLs (excluding environments files)..."
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"

      # Allow localhost ONLY inside environments/environment.ts (dev).
      # Fail if localhost appears anywhere else.
      - |
        if grep -R -n -E "localhost:8000|127\.0\.0\.1:8000" src/ \
          --exclude="environment.ts" \
          --exclude="environment.development.ts" \
          --exclude-dir="node_modules" \
          --exclude-dir="dist" ; then
          echo "‚ùå Found localhost in SOURCE outside environments/*.ts. Fix before building."
          exit 1
        else
          echo "‚úÖ SOURCE clean (no localhost outside environments)."
        fi

      - echo "üîé Ensuring you DON'T import environments/environment.prod directly..."
      - |
        if grep -R -n "environments/environment\.prod" src/ ; then
          echo "‚ùå Don't import environment.prod directly. Import 'environments/environment' instead."
          exit 1
        else
          echo "‚úÖ No direct environment.prod imports."
        fi

  build:
    commands:
      - echo "üèó Building PRODUCTION bundle..."
      - cd "$CODEBUILD_SRC_DIR/$PANEL_DIR"
      - ng build --configuration production --output-path=dist/admin-panel

  post_build:
    commands:
      - echo "üîé Verifying BUILT JS has no localhost..."
      - cd "$CODEBUILD_SRC_DIR/$DIST_DIR"
      - |
        if grep -R -n -E "localhost:8000|127\.0\.0\.1:8000" ./*.js 2>/dev/null ; then
          echo "‚ùå Built bundle still contains localhost. Check env swapping and source."
          exit 1
        else
          echo "‚úÖ Built bundle clean (no localhost)."
        fi

      # ---- Deploy to S3 with correct caching ----
      - echo "‚òÅÔ∏è  Syncing build to s3://$S3_BUCKET/"
      - aws s3 sync "$CODEBUILD_SRC_DIR/$DIST_DIR/" "s3://$S3_BUCKET/" --delete

      # Set index.html to no-cache (so browsers always revalidate on each visit).
      - echo "üß† Setting no-cache on index.html"
      - aws s3 cp "s3://$S3_BUCKET/index.html" "s3://$S3_BUCKET/index.html" \
          --metadata-directive REPLACE \
          --cache-control "no-cache, no-store, must-revalidate" \
          --content-type "text/html; charset=utf-8"

      # ---- Invalidate CloudFront so users get the fresh index.html immediately ----
      - |
        if [ -n "$CF_DISTRIBUTION_ID" ]; then
          echo "üöÄ Creating CloudFront invalidation /* on $CF_DISTRIBUTION_ID"
          aws cloudfront create-invalidation --distribution-id "$CF_DISTRIBUTION_ID" --paths "/*"
        else
          echo "‚ö†Ô∏è CF_DISTRIBUTION_ID is not set; skipping CloudFront invalidation."
        fi

      - echo "‚úÖ Build & deploy completed on $(date)"

artifacts:
  files:
    - '**/*'
  base-directory: 'admin-panel/dist/admin-panel'
