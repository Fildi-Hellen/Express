version: 0.2

phases:
  install:
    commands:
      - echo "Updating system dependencies..."
      - sudo dnf update -y

      - echo "Installing required tools..."
      - sudo dnf install -y mysql-community-client nmap curl

  pre_build:
    commands:
      - echo "Fetching environment variables from AWS Parameter Store..."
      - set +x  # Disable logging sensitive information
      - export DB_HOST=$(aws ssm get-parameter --name "/expressuddb/db_host" --query Parameter.Value --output text)
      - export DB_PORT=$(aws ssm get-parameter --name "/expressuddb/db_port" --query Parameter.Value --output text)
      - export DB_DATABASE=$(aws ssm get-parameter --name "/expressuddb/db_name" --query Parameter.Value --output text)
      - export DB_USERNAME=$(aws ssm get-parameter --name "/expressuddb/db_user" --query Parameter.Value --output text)
      - export DB_PASSWORD=$(aws ssm get-parameter --name "/expressuddb/db_password" --with-decryption --query Parameter.Value --output text)
      - set -x  # Re-enable logging

      - echo "Environment variables loaded successfully."

      # Log CodeBuild public IP
      - echo "Fetching CodeBuild's public IP..."
      - curl -s http://checkip.amazonaws.com > public_ip.log
      - echo "CodeBuild's public IP is: $(cat public_ip.log)"

      # Test network connectivity to the RDS instance
      - echo "Testing network connectivity to RDS..."
      - echo "Testing port $DB_PORT on $DB_HOST..."
      - nc -zv "$DB_HOST" "$DB_PORT" || {
          echo "Port $DB_PORT on $DB_HOST is not reachable.";
          exit 1;
        }

      - echo "Attempting to connect to the RDS instance using MySQL client..."
      - |
        if mysql -h "$DB_HOST" -P "$DB_PORT" -u "$DB_USERNAME" -p"$DB_PASSWORD" -e "SHOW DATABASES;"; then
          echo "Successfully connected to the database."
        else
          echo "Failed to connect to the database. Debugging information:"
          echo "Host: $DB_HOST"
          echo "Port: $DB_PORT"
          echo "Database: $DB_DATABASE"
          echo "Username: $DB_USERNAME"
          exit 1
        fi

  build:
    commands:
      - echo "Building the application..."
      - echo "Installing dependencies using Composer..."
      - curl -sS https://getcomposer.org/installer | php
      - sudo mv composer.phar /usr/local/bin/composer
      - composer install --no-dev --optimize-autoloader

  post_build:
    commands:
      - echo "Build completed successfully."

artifacts:
  files:
    - '**/*'
    - '!node_modules/**/*'
  base-directory: /codebuild/output/src
