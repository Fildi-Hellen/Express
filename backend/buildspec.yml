version: 0.2

phases:
  install:
    runtime-versions:
      php: 8.3
    commands:
      - echo "Installing system dependencies..."
      - sudo dnf update -y
      - sudo yum install -y git unzip
      - curl -sS https://getcomposer.org/installer | php
      - mv composer.phar /usr/local/bin/composer
      - echo "Dependencies installed successfully."

  pre_build:
    commands:
      - echo "Fetching environment variables from AWS Parameter Store..."
      - set +x  # Disable logging of sensitive information
      - export DB_HOST=$(aws ssm get-parameter --name "/expressuddb/db_host" --query Parameter.Value --output text)
      - export DB_PORT=$(aws ssm get-parameter --name "/expressuddb/db_port" --query Parameter.Value --output text)
      - export DB_DATABASE=$(aws ssm get-parameter --name "/expressuddb/db_name" --query Parameter.Value --output text)
      - export DB_USERNAME=$(aws ssm get-parameter --name "/expressuddb/db_user" --query Parameter.Value --output text)
      - export DB_PASSWORD=$(aws ssm get-parameter --name "/expressuddb/db_password" --with-decryption --query Parameter.Value --output text)
      - set -x  # Re-enable logging
      - echo "Environment variables loaded successfully."

      - echo "Configuring Laravel environment..."
      - cp "$CODEBUILD_SRC_DIR/backend/.env.example" "$CODEBUILD_SRC_DIR/backend/.env"
      - sed -i "s|DB_HOST=.*|DB_HOST=$DB_HOST|" "$CODEBUILD_SRC_DIR/backend/.env"
      - sed -i "s|DB_PORT=.*|DB_PORT=$DB_PORT|" "$CODEBUILD_SRC_DIR/backend/.env"
      - sed -i "s|DB_DATABASE=.*|DB_DATABASE=$DB_DATABASE|" "$CODEBUILD_SRC_DIR/backend/.env"
      - sed -i "s|DB_USERNAME=.*|DB_USERNAME=$DB_USERNAME|" "$CODEBUILD_SRC_DIR/backend/.env"
      - sed -i "s|DB_PASSWORD=.*|DB_PASSWORD=$DB_PASSWORD|" "$CODEBUILD_SRC_DIR/backend/.env"
      - echo "Laravel environment configured successfully."

  build:
    commands:
      - echo "Installing Laravel dependencies..."
      - cd "$CODEBUILD_SRC_DIR/backend"
      - composer install --no-dev --optimize-autoloader
      - echo "Building optimized application..."
      - php artisan config:cache
      - php artisan route:cache
      - php artisan view:cache
      - echo "Application build completed."

  post_build:
    commands:
      - echo "Testing database connectivity..."
      - yum install -y nmap-ncat
      - |
        if nc -zv "$DB_HOST" "$DB_PORT"; then
          echo "Database connection successful."
        else
          echo "Failed to connect to the database."
          exit 1
        fi
      - echo "Running database migrations..."
      - php artisan migrate --force
      - echo "Post-build steps completed successfully."

artifacts:
  files:
    - '**/*'
  base-directory: backend
  discard-paths: no

cache:
  paths:
    - '/root/.composer/cache'


